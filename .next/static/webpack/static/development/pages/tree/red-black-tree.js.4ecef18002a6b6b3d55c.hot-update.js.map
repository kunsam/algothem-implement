{"version":3,"file":"static/webpack/static/development/pages/tree/red-black-tree.js.4ecef18002a6b6b3d55c.hot-update.js","sources":["webpack:///./src/view/font/font-manager.ts"],"sourcesContent":["import * as THREE from 'three';\n\n\nexport default class FontManager{\n  public static fontLoader: THREE.FontLoader = new THREE.FontLoader();\n  public static frontMap: Map<string, THREE.Font> = new Map();\n  public static registerdFrontPathMap: Map<string, string> = new Map();\n  public static getFontAsync(type: string): Promise<THREE.Font> {\n    if (FontManager.frontMap.has(type)) {\n      return Promise.resolve(FontManager.frontMap.get(type)!);\n    }\n    const path = FontManager.registerdFrontPathMap.get(type);\n    if (!path) {\n      throw new Error('Dont Exist this font type');\n    }\n    return new Promise(res => {\n      this.fontLoader.load(path, (result) => {\n        res(result);\n        FontManager.frontMap.set(type, result);\n      });\n    });\n  }\n\n  public static getFont (type: string) {\n    return FontManager.frontMap.get(type) as THREE.Font;\n  }\n  \n  public static registerFont(name: string, path: string) {\n    FontManager.registerdFrontPathMap.set(name, path);\n  }\n\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;;;;;;;;;AAIA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;;;;AA1BA;AACA;AADA;AACA;AADA;AACA;;;;;A","sourceRoot":""}